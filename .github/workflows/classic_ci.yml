name: TailWindTraders/Classic CI
on:
  push:
  workflow_dispatch:
env:
  BUILDCONFIGURATION: Release
  BUILDPARAMETERS.RESTOREBUILDPROJECTS: "**/*.csproj"
  BUILDPARAMETERS.TESTPROJECTS: "**/*[Tt]ests/*.csproj"
  BUILDPLATFORM: any cpu
  SYSTEM.DEBUG: 'false'
jobs:
  Job_1:
    name: Agent job 1
    runs-on: ubuntu-20.04
    environment: Dev/Test2
    steps:
    - uses: actions/checkout@v2
    - name: Use Node 10.16.3
      uses: actions/setup-node@v2
      with:
        node-version: 10.16.3
    - name: npm install
      run: npm install
      working-directory: Source/Tailwind.Traders.Web/ClientApp
    - name: Restore
      shell: bash
      run: shopt -s globstar; for f in ./**/*.csproj; do dotnet restore $f  ; done
    - name: Build
      shell: bash
      run: shopt -s globstar; for f in ./**/*.csproj; do dotnet build $f --configuration ${{ env.BUILDCONFIGURATION }} ; done
    - name: Test
      shell: bash
      run: shopt -s globstar; for f in ./**/*.csproj; do dotnet test $f --configuration ${{ env.BUILDCONFIGURATION }} ; done
    - name: Publish
      shell: bash
      run: shopt -s globstar; for f in ./**/*.csproj; do dotnet publish $f --configuration ${{ env.BUILDCONFIGURATION }} --output ${{ runner.temp }} ; done
    # The following script preserves the globbing behavior of the CopyFiles task.
    # Refer to this transformer's documentation for an alternative that will work in simple cases.
    - name: 'Copy Files to: ${{ runner.temp }}/appservice'
      uses: actions/github-script@v3
      env:
        TARGET_FOLDER: "${{ runner.temp }}/appservice"
        SOURCE_FOLDER: Deploy/appservice
      with:
        github-token: "${{ secrets.GITHUB_TOKEN }}"
        script: |-
          const fs = require('fs').promises
          const path = require('path')
          const target = path.resolve(process.env.TARGET_FOLDER)
          process.chdir(process.env.SOURCE_FOLDER || '.')
          if (process.env.CLEAN_TARGET_FOLDER === 'true') await io.rmRF(target)
          const flattenFolders = process.env.FLATTEN_FOLDERS === 'true'
          const options = {force: process.env.OVERWRITE === 'true'}
          const globber = await glob.create(process.env.CONTENTS || '**')
          for await (const file of globber.globGenerator()) {
            if ((await fs.lstat(file)).isDirectory()) continue
            const filename = flattenFolders ? path.basename(file) : file.substring(process.cwd().length)
            const dest = path.join(target, filename)
            await io.mkdirP(path.dirname(dest))
            await io.cp(file, dest, options)
          }
    - name: Publish Artifact
      if: success() || failure()
      uses: actions/upload-artifact@v2
      with:
        path: "\\\\my\\share\\${{ github.workflow }}\\${{ github.run_number }}"
